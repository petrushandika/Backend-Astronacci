{"level":"error","message":"Caught async error: secretOrPrivateKey must have a value","service":"user-service","stack":"Error: secretOrPrivateKey must have a value\n    at Object.module.exports [as sign] (D:\\05 - Project\\Backend-Astronacci\\node_modules\\jsonwebtoken\\sign.js:111:20)\n    at D:\\05 - Project\\Backend-Astronacci\\src\\services\\auth.service.ts:46:21\n    at Generator.next (<anonymous>)\n    at fulfilled (D:\\05 - Project\\Backend-Astronacci\\src\\services\\auth.service.ts:5:58)","timestamp":"2025-05-23 20:13:30"}
{"level":"error","message":"500 - secretOrPrivateKey must have a value - /api/auth/login - POST - ::1","service":"user-service","timestamp":"2025-05-23 20:13:30"}
{"level":"error","message":"500 - Unknown authentication strategy \"google\" - /api/auth/google - GET - ::1","service":"user-service","timestamp":"2025-05-23 21:22:40"}
{"level":"error","message":"500 - Unknown authentication strategy \"google\" - /api/auth/google - GET - ::1","service":"user-service","timestamp":"2025-05-23 21:22:50"}
{"level":"error","message":"500 - Unknown authentication strategy \"google\" - /api/auth/google - GET - ::1","service":"user-service","timestamp":"2025-05-23 21:23:13"}
{"level":"error","message":"500 - Unknown authentication strategy \"google\" - /api/auth/google - GET - ::1","service":"user-service","timestamp":"2025-05-23 21:24:11"}
{"level":"error","message":"500 - Unknown authentication strategy \"google\" - /api/auth/google - GET - ::1","service":"user-service","timestamp":"2025-05-23 21:24:13"}
{"level":"error","message":"Caught async error: Invalid password","service":"user-service","stack":"Error: Invalid password\n    at D:\\05 - Project\\Backend-Astronacci\\src\\services\\auth.service.ts:43:11\n    at Generator.next (<anonymous>)\n    at fulfilled (D:\\05 - Project\\Backend-Astronacci\\src\\services\\auth.service.ts:5:58)","timestamp":"2025-05-23 22:53:02"}
{"level":"error","message":"401 - Invalid password - /api/auth/login - POST - ::1","service":"user-service","timestamp":"2025-05-23 22:53:02"}
{"level":"error","message":"Caught async error: Invalid password","service":"user-service","stack":"Error: Invalid password\n    at D:\\05 - Project\\Backend-Astronacci\\src\\services\\auth.service.ts:43:11\n    at Generator.next (<anonymous>)\n    at fulfilled (D:\\05 - Project\\Backend-Astronacci\\src\\services\\auth.service.ts:5:58)","timestamp":"2025-05-23 22:53:20"}
{"level":"error","message":"401 - Invalid password - /api/auth/login - POST - ::1","service":"user-service","timestamp":"2025-05-23 22:53:20"}
{"level":"error","message":"400 - Expected double-quoted property name in JSON at position 70 (line 4 column 1) - /api/auth/login - POST - ::1","service":"user-service","timestamp":"2025-05-23 22:54:20"}
{"level":"error","message":"JWT Error: jwt expired","service":"user-service","timestamp":"2025-05-24 09:51:54"}
{"level":"error","message":"401 - Invalid token: jwt expired - /api/articles - GET - ::1","service":"user-service","timestamp":"2025-05-24 09:51:54"}
{"level":"error","message":"JWT Error: jwt expired","service":"user-service","timestamp":"2025-05-24 09:52:00"}
{"level":"error","message":"401 - Invalid token: jwt expired - /api/users/me - GET - ::1","service":"user-service","timestamp":"2025-05-24 09:52:00"}
{"level":"error","message":"401 - No Authorization header provided - /api/articles - GET - ::1","service":"user-service","timestamp":"2025-05-24 09:55:29"}
{"level":"error","message":"401 - No Authorization header provided - /api/articles - GET - ::1","service":"user-service","timestamp":"2025-05-24 09:55:43"}
{"level":"error","message":"401 - No Authorization header provided - /api/articles - GET - ::1","service":"user-service","timestamp":"2025-05-24 09:55:45"}
{"level":"error","message":"401 - No Authorization header provided - /api/articles - GET - ::1","service":"user-service","timestamp":"2025-05-24 09:55:55"}
{"level":"error","message":"401 - No Authorization header provided - /api/articles - GET - ::1","service":"user-service","timestamp":"2025-05-24 09:57:45"}
{"level":"error","message":"401 - No Authorization header provided - /api/articles - GET - ::1","service":"user-service","timestamp":"2025-05-24 09:57:45"}
{"level":"error","message":"JWT Error: jwt malformed","service":"user-service","timestamp":"2025-05-24 09:59:46"}
{"level":"error","message":"401 - Invalid token: jwt malformed - /api/users/me - GET - ::1","service":"user-service","timestamp":"2025-05-24 09:59:46"}
{"level":"error","message":"JWT Error: jwt malformed","service":"user-service","timestamp":"2025-05-24 09:59:51"}
{"level":"error","message":"401 - Invalid token: jwt malformed - /api/users/me - GET - ::1","service":"user-service","timestamp":"2025-05-24 09:59:51"}
{"level":"error","message":"JWT Error: jwt malformed","service":"user-service","timestamp":"2025-05-24 09:59:51"}
{"level":"error","message":"401 - Invalid token: jwt malformed - /api/users/me - GET - ::1","service":"user-service","timestamp":"2025-05-24 09:59:51"}
{"level":"error","message":"Caught async error: Invalid password","service":"user-service","stack":"Error: Invalid password\n    at D:\\05 - Project\\Backend-Astronacci\\src\\services\\auth.service.ts:43:11\n    at Generator.next (<anonymous>)\n    at fulfilled (D:\\05 - Project\\Backend-Astronacci\\src\\services\\auth.service.ts:5:58)","timestamp":"2025-05-24 10:00:09"}
{"level":"error","message":"401 - Invalid password - /api/auth/login - POST - ::1","service":"user-service","timestamp":"2025-05-24 10:00:09"}
{"level":"error","message":"JWT Error: jwt malformed","service":"user-service","timestamp":"2025-05-24 10:00:17"}
{"level":"error","message":"401 - Invalid token: jwt malformed - /api/users/me - GET - ::1","service":"user-service","timestamp":"2025-05-24 10:00:17"}
{"level":"error","message":"JWT Error: jwt malformed","service":"user-service","timestamp":"2025-05-24 10:00:17"}
{"level":"error","message":"401 - Invalid token: jwt malformed - /api/users/me - GET - ::1","service":"user-service","timestamp":"2025-05-24 10:00:17"}
{"level":"error","message":"JWT Error: jwt malformed","service":"user-service","timestamp":"2025-05-24 10:00:25"}
{"level":"error","message":"401 - Invalid token: jwt malformed - /api/users/me - GET - ::1","service":"user-service","timestamp":"2025-05-24 10:00:25"}
{"level":"error","message":"JWT Error: jwt malformed","service":"user-service","timestamp":"2025-05-24 10:00:25"}
{"level":"error","message":"401 - Invalid token: jwt malformed - /api/users/me - GET - ::1","service":"user-service","timestamp":"2025-05-24 10:00:25"}
{"level":"error","message":"JWT Error: jwt malformed","service":"user-service","timestamp":"2025-05-24 10:01:01"}
{"level":"error","message":"401 - Invalid token: jwt malformed - /api/users/me - GET - ::1","service":"user-service","timestamp":"2025-05-24 10:01:01"}
{"level":"error","message":"JWT Error: jwt malformed","service":"user-service","timestamp":"2025-05-24 10:01:01"}
{"level":"error","message":"401 - Invalid token: jwt malformed - /api/users/me - GET - ::1","service":"user-service","timestamp":"2025-05-24 10:01:01"}
{"level":"error","message":"JWT Error: jwt malformed","service":"user-service","timestamp":"2025-05-24 10:02:02"}
{"level":"error","message":"401 - Invalid token: jwt malformed - /api/users/me - GET - ::1","service":"user-service","timestamp":"2025-05-24 10:02:02"}
{"level":"error","message":"JWT Error: jwt malformed","service":"user-service","timestamp":"2025-05-24 10:02:02"}
{"level":"error","message":"401 - Invalid token: jwt malformed - /api/users/me - GET - ::1","service":"user-service","timestamp":"2025-05-24 10:02:02"}
{"level":"error","message":"JWT Error: jwt malformed","service":"user-service","timestamp":"2025-05-24 10:02:37"}
{"level":"error","message":"401 - Invalid token: jwt malformed - /api/users/me - GET - ::1","service":"user-service","timestamp":"2025-05-24 10:02:37"}
{"level":"error","message":"JWT Error: jwt malformed","service":"user-service","timestamp":"2025-05-24 10:02:37"}
{"level":"error","message":"401 - Invalid token: jwt malformed - /api/users/me - GET - ::1","service":"user-service","timestamp":"2025-05-24 10:02:37"}
{"level":"error","message":"JWT Error: jwt malformed","service":"user-service","timestamp":"2025-05-24 10:03:52"}
{"level":"error","message":"401 - Invalid token: jwt malformed - /api/users/me - GET - ::1","service":"user-service","timestamp":"2025-05-24 10:03:52"}
{"level":"error","message":"JWT Error: jwt malformed","service":"user-service","timestamp":"2025-05-24 10:05:11"}
{"level":"error","message":"401 - Invalid token: jwt malformed - /api/users/me - GET - ::1","service":"user-service","timestamp":"2025-05-24 10:05:11"}
{"level":"error","message":"JWT Error: jwt malformed","service":"user-service","timestamp":"2025-05-24 10:05:13"}
{"level":"error","message":"401 - Invalid token: jwt malformed - /api/users/me - GET - ::1","service":"user-service","timestamp":"2025-05-24 10:05:13"}
{"level":"error","message":"JWT Error: jwt malformed","service":"user-service","timestamp":"2025-05-24 10:05:15"}
{"level":"error","message":"401 - Invalid token: jwt malformed - /api/users/me - GET - ::1","service":"user-service","timestamp":"2025-05-24 10:05:15"}
{"level":"error","message":"JWT Error: jwt malformed","service":"user-service","timestamp":"2025-05-24 10:05:15"}
{"level":"error","message":"401 - Invalid token: jwt malformed - /api/users/me - GET - ::1","service":"user-service","timestamp":"2025-05-24 10:05:15"}
{"level":"error","message":"JWT Error: jwt malformed","service":"user-service","timestamp":"2025-05-24 10:05:44"}
{"level":"error","message":"401 - Invalid token: jwt malformed - /api/users/me - GET - ::1","service":"user-service","timestamp":"2025-05-24 10:05:44"}
{"level":"error","message":"JWT Error: jwt malformed","service":"user-service","timestamp":"2025-05-24 10:05:55"}
{"level":"error","message":"401 - Invalid token: jwt malformed - /api/users/me - GET - ::1","service":"user-service","timestamp":"2025-05-24 10:05:55"}
{"level":"error","message":"401 - No Authorization header provided - /api/articles - GET - ::1","service":"user-service","timestamp":"2025-05-24 10:08:51"}
{"level":"error","message":"401 - No Authorization header provided - /api/articles - GET - ::1","service":"user-service","timestamp":"2025-05-24 10:08:51"}
{"level":"error","message":"401 - No Authorization header provided - /api/articles - GET - ::1","service":"user-service","timestamp":"2025-05-24 10:08:56"}
{"level":"error","message":"401 - No Authorization header provided - /api/articles - GET - ::1","service":"user-service","timestamp":"2025-05-24 10:08:56"}
{"level":"error","message":"401 - No Authorization header provided - /api/articles - GET - ::1","service":"user-service","timestamp":"2025-05-24 10:11:28"}
{"level":"error","message":"401 - No Authorization header provided - /api/articles - GET - ::1","service":"user-service","timestamp":"2025-05-24 10:11:28"}
{"level":"error","message":"401 - No Authorization header provided - /api/articles - GET - ::1","service":"user-service","timestamp":"2025-05-24 10:11:43"}
{"level":"error","message":"401 - No Authorization header provided - /api/articles - GET - ::1","service":"user-service","timestamp":"2025-05-24 10:11:44"}
{"level":"error","message":"JWT Error: jwt expired","service":"user-service","timestamp":"2025-05-24 10:21:39"}
{"level":"error","message":"401 - Invalid token: jwt expired - /api/articles - GET - ::1","service":"user-service","timestamp":"2025-05-24 10:21:39"}
{"level":"error","message":"JWT Error: jwt expired","service":"user-service","timestamp":"2025-05-24 10:21:47"}
{"level":"error","message":"401 - Invalid token: jwt expired - /api/users/me - GET - ::1","service":"user-service","timestamp":"2025-05-24 10:21:47"}
{"level":"error","message":"500 - \nInvalid `prisma.user.create()` invocation in\nD:\\05 - Project\\Backend-Astronacci\\src\\config\\passport.ts:22:36\n\n  19 });\n  20 \n  21 if (!user) {\n→ 22   user = await prisma.user.create(\nUnique constraint failed on the fields: (`email`) - /api/auth/google/callback?code=4%2F0AUJR-x5s3xEb4a9pornNgifxG0GsBQvo3ylDpFTR6PMgyRbcNtRp2drtGhBxfi7OlDTaAA&scope=email+profile+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.profile+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email+openid&authuser=0&prompt=consent - GET - ::1","service":"user-service","timestamp":"2025-05-24 11:58:05"}
{"level":"error","message":"500 - Unknown authentication strategy \"google\" - /api/auth/google/callback?code=4%2F0AUJR-x4SCO4gi7x2tvAQ11Qoe72r_z93eX7L4wvIqdLruhWONLZNfvekYiMoAIYM2XEyxw&scope=email+profile+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.profile+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email+openid&authuser=0&prompt=consent - GET - ::1","service":"user-service","timestamp":"2025-05-24 12:30:41"}
{"level":"error","message":"500 - Unknown authentication strategy \"google\" - /api/auth/google/callback?code=4%2F0AUJR-x5NdKabIxO4KlyJI5tZGVjVjZRtTU__eE6ejZGs6AzxzlM_f8SW7zbCOOKsAHV5rA&scope=email+profile+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.profile+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email+openid&authuser=0&prompt=consent - GET - ::1","service":"user-service","timestamp":"2025-05-24 12:31:17"}
